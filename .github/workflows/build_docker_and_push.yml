name: Build and Push to Docker Hub

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      # Install sops via official static binary
      - name: Install sops (static binary)
        run: |
          set -euxo pipefail
          ARCH="$(uname -m)"
          case "$ARCH" in
            x86_64)  SOPS_ARCH="amd64" ;;
            aarch64) SOPS_ARCH="arm64" ;;
            *) echo "Unsupported arch: $ARCH"; exit 1 ;;
          esac
          VER="$(curl -s https://api.github.com/repos/getsops/sops/releases/latest \
                | grep -Po '"tag_name":\s*"\Kv[0-9.]+' )"
          curl -L -o sops "https://github.com/getsops/sops/releases/download/${VER}/sops-${VER}.linux.${SOPS_ARCH}"
          chmod +x sops
          sudo mv sops /usr/local/bin/sops
          sops --version

      # Decrypt your env file into the workspace (dotenv mode)
      - name: Decrypt env
        env:
          AGE_PRIVATE_KEY: ${{ secrets.AGE_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.config/sops/age
          printf "%s\n" "$AGE_PRIVATE_KEY" > ~/.config/sops/age/keys.txt
          chmod 600 ~/.config/sops/age/keys.txt
          sops -d --input-type dotenv --output-type dotenv .env.enc > .env
          head -n 1 .env >/dev/null

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | \
          docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image (with BuildKit secret)
        env:
          DOCKER_BUILDKIT: "1"
        run: |
          docker build \
            --secret id=appenv,src=.env \
            -t qunikamshreyas/68b85bb19290471499857ea8_streamlit_app:latest \
            .

      - name: Push Docker image
        run: |
          docker push qunikamshreyas/68b85bb19290471499857ea8_streamlit_app:latest

      # Cleanup: remove plaintext after build
      - name: Cleanup decrypted env
        if: always()
        run: rm -f .env
